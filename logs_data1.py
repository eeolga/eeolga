# -*- coding: utf-8 -*-
"""Logs_data1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dZ_9muXpoXJ9H_8JGuZNP0YgGtRctXCM
"""

import numpy as np
import torch

import pandas as pd

CAD_path="/content/logs_CAD_2024_1.xlsx"

print(CAD_path)

data = pd.read_excel('/content/logs_CAD_2024_1.xlsx')

display(pd.DataFrame(data))

from matplotlib import pyplot as plt
import seaborn as sns
figsize = (12, 1.2 * len(_df_29['timestamp'].unique()))
plt.figure(figsize=figsize)
sns.violinplot(_df_29, x='index', y='timestamp', inner='stick', palette='Dark2')
sns.despine(top=True, right=True, bottom=True, left=True)

from matplotlib import pyplot as plt
_df_16['index'].plot(kind='hist', bins=20, title='index')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title tool_id vs log_count

from matplotlib import pyplot as plt
data.plot(kind='scatter', x='tool_id', y='log_count', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title timestamp vs log_count

from matplotlib import pyplot as plt
import seaborn as sns
def _plot_series(series, series_name, series_index=0):
  palette = list(sns.palettes.mpl_palette('Dark2'))
  xs = series['timestamp']
  ys = series['log_count']

  plt.plot(xs, ys, label=series_name, color=palette[series_index % len(palette)])

fig, ax = plt.subplots(figsize=(10, 5.2), layout='constrained')
df_sorted = data.sort_values('timestamp', ascending=True)
_plot_series(df_sorted, '')
sns.despine(fig=fig, ax=ax)
plt.xlabel('timestamp')
_ = plt.ylabel('log_count')

# @title timestamp vs user_id

from matplotlib import pyplot as plt
import seaborn as sns
def _plot_series(series, series_name, series_index=0):
  palette = list(sns.palettes.mpl_palette('Dark2'))
  xs = series['timestamp']
  ys = series['user_id']

  plt.plot(xs, ys, label=series_name, color=palette[series_index % len(palette)])

fig, ax = plt.subplots(figsize=(10, 5.2), layout='constrained')
df_sorted = data.sort_values('timestamp', ascending=True)
_plot_series(df_sorted, '')
sns.despine(fig=fig, ax=ax)
plt.xlabel('timestamp')
_ = plt.ylabel('user_id')

# @title log_count

from matplotlib import pyplot as plt
data['log_count'].plot(kind='line', figsize=(8, 4), title='log_count')
plt.gca().spines[['top', 'right']].set_visible(False)

"""Convert to excel file"""

d = pd.DataFrame(name)

d.to_excel("output.xlsx") #see file in sample data and refresh